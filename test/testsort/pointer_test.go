package testsort

import (
	"encoding/json"
	"fmt"
	"testing"
	"unsafe"
)

type Lp struct {
	name string
	age  int
}

func TestPointer(t *testing.T) {
	l := Lp{
		name: "t6e",
		age:  0,
	}
	lPointer := unsafe.Pointer(&l)

	lt := (*string)(unsafe.Pointer(lPointer))
	*lt = "lcl"

	lage := (*int64)(unsafe.Pointer(uintptr(lPointer) + unsafe.Offsetof(l.age)))
	*lage = 22

	fmt.Println("name", l.name, "age", l.age)
}

type AutoGenerated struct {
	Age   int    `json:"age"`
	Name  string `json:"name"`
	Child []int  `json:"child"`
}

func TestLc(t *testing.T) {
	jsonStr1 := `{"age": 14,"name": "potter", "child":[1,2,3]}`
	a := AutoGenerated{}
	json.Unmarshal([]byte(jsonStr1), &a)
	aa := a.Child
	fmt.Println(aa)
	jsonStr2 := `{"age": 12,"name": "potter", "child":[3,4,5,7,8,9]}`
	json.Unmarshal([]byte(jsonStr2), &a)
	fmt.Println(aa)
}
